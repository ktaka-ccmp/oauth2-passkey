name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]
        include:
          - rust: stable
            can-fail: false
          - rust: beta
            can-fail: true
          - rust: nightly
            can-fail: true
    continue-on-error: ${{ matrix.can-fail }}

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ matrix.rust }}-
          ${{ runner.os }}-cargo-

    - name: Check formatting
      run: cargo fmt --all -- --check
      if: matrix.rust == 'stable'

    - name: Run clippy
      run: cargo clippy --all-targets --all-features
      if: matrix.rust == 'stable'

    - name: Build core library
      run: cargo build --verbose --manifest-path oauth2_passkey/Cargo.toml

    - name: Build axum integration
      run: cargo build --verbose --manifest-path oauth2_passkey_axum/Cargo.toml --all-features

    - name: Test core library
      run: cargo test --verbose --manifest-path oauth2_passkey/Cargo.toml

    - name: Test axum integration (all features)
      run: cargo test --verbose --manifest-path oauth2_passkey_axum/Cargo.toml --all-features

    - name: Test axum integration (no default features)
      run: cargo test --verbose --manifest-path oauth2_passkey_axum/Cargo.toml --no-default-features

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      run: cargo audit --ignore RUSTSEC-2023-0071

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-docs-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-docs-
          ${{ runner.os }}-cargo-

    - name: Build documentation
      run: |
        cargo doc --no-deps --manifest-path oauth2_passkey/Cargo.toml
        cargo doc --no-deps --manifest-path oauth2_passkey_axum/Cargo.toml --all-features
      env:
        RUSTDOCFLAGS: "-D warnings"

  msrv:
    name: Minimum Supported Rust Version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust 1.85.1
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: "1.85.1"

    - name: Check MSRV compatibility
      run: |
        cargo check --manifest-path oauth2_passkey/Cargo.toml
        cargo check --manifest-path oauth2_passkey_axum/Cargo.toml --all-features
